/*
 * Copyright (c) 2015-2016 Spotify AB
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

project.group = 'com.operando.spotify.android'
project.archivesBaseName = 'auth'
project.version = '2.1.3'

android {
    compileSdk 33
    buildToolsVersion = '33.0.0'

    buildFeatures {
        buildConfig = true
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 33
        buildConfigField 'String', 'LIB_VERSION_NAME', "\"$project.version\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }

    libraryVariants.configureEach { libraryVariant ->
        libraryVariant.outputs.all { output ->
            // Rename auth-auth-[buildtype].aar to auth-[buildtype].aar
            if (libraryVariant.name.startsWith("auth")) {
                outputFileName = "auth-${libraryVariant.buildType.name}.aar"
            }
        }
    }

    lintOptions {
        lintConfig file("${project.rootDir}/config/lint.xml")
        quiet false
        warningsAsErrors false
        textReport true
        textOutput 'stdout'
        xmlReport false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    def manifestPlaceholdersForTests = [redirectSchemeName: "spotify-sdk", redirectHostName: "auth"]
    namespace 'com.spotify.sdk.android.auth'
    unitTestVariants.configureEach {
        it.mergedFlavor.manifestPlaceholders += manifestPlaceholdersForTests
    }
}

dependencies {
    implementation 'androidx.browser:browser:1.5.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation 'org.robolectric:robolectric:4.11.1'
}

/*
    Static analysis section
    run: ./gradlew auth-lib:checkstyle auth-lib:findbugs
 */

apply plugin: 'checkstyle'

tasks.register('checkstyle', Checkstyle) {
    configFile file("${project.rootDir}/config/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}
